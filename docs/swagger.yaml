basePath: /api/v1
definitions:
  dto.RegisterRequest:
    properties:
      confirm:
        example: Pass123!@#
        minLength: 8
        type: string
      email:
        example: john@example.com
        type: string
      name:
        example: John Doe
        type: string
      password:
        example: Pass123!@#
        minLength: 8
        type: string
    required:
    - confirm
    - email
    - name
    - password
    type: object
  entity.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      profile_picture:
        type: string
      updated_at:
        type: string
      uuid:
        type: string
    type: object
  response.Response:
    properties:
      data: {}
      error:
        type: string
      message:
        type: string
      status:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server for Doc Management API.
  title: Doc Management API
  version: "1.0"
paths:
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with name, email, and password
      parameters:
      - description: Register Request
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: user registered successfully
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/entity.User'
              type: object
        "400":
          description: invalid request
          schema:
            $ref: '#/definitions/response.Response'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/response.Response'
      summary: Register a new user
      tags:
      - Auth
swagger: "2.0"
